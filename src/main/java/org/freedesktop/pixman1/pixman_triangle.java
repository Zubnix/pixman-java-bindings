package org.freedesktop.pixman1;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/pixman-1/pixman.h:1013</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class pixman_triangle extends Structure {
	/** C type : pixman_point_fixed_t */
	public pixman_point_fixed p1;
	/** C type : pixman_point_fixed_t */
	public pixman_point_fixed p2;
	/** C type : pixman_point_fixed_t */
	public pixman_point_fixed p3;
	public pixman_triangle() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("p1", "p2", "p3");
	}
	/**
	 * @param p1 C type : pixman_point_fixed_t<br>
	 * @param p2 C type : pixman_point_fixed_t<br>
	 * @param p3 C type : pixman_point_fixed_t
	 */
	public pixman_triangle(pixman_point_fixed p1, pixman_point_fixed p2, pixman_point_fixed p3) {
		super();
		this.p1 = p1;
		this.p2 = p2;
		this.p3 = p3;
	}
	public pixman_triangle(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends pixman_triangle implements Structure.ByReference {
		
	};
	public static class ByValue extends pixman_triangle implements Structure.ByValue {
		
	};
}
