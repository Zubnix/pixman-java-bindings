package org.freedesktop.pixman1;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/pixman-1/pixman.h:1007</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class pixman_trapezoid extends Structure {
	/** C type : pixman_fixed_t */
	public int top;
	/** C type : pixman_fixed_t */
	public int bottom;
	/** C type : pixman_line_fixed_t */
	public pixman_line_fixed left;
	/** C type : pixman_line_fixed_t */
	public pixman_line_fixed right;
	public pixman_trapezoid() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("top", "bottom", "left", "right");
	}
	/**
	 * @param top C type : pixman_fixed_t<br>
	 * @param bottom C type : pixman_fixed_t<br>
	 * @param left C type : pixman_line_fixed_t<br>
	 * @param right C type : pixman_line_fixed_t
	 */
	public pixman_trapezoid(int top, int bottom, pixman_line_fixed left, pixman_line_fixed right) {
		super();
		this.top = top;
		this.bottom = bottom;
		this.left = left;
		this.right = right;
	}
	public pixman_trapezoid(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends pixman_trapezoid implements Structure.ByReference {
		
	};
	public static class ByValue extends pixman_trapezoid implements Structure.ByValue {
		
	};
}
